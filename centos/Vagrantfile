# -*- mode: ruby -*-
# vi: set ft=ruby et ts=2 sts=2 sw=2 :

# centos7 vm

default_box = "centos/7"
# should we prescribe a default ram at all?
default_ram = 512

nodeconfig = {
  :hostname => "myvm",
  :box => "centos/7",
  #:ip => "192.168.123.100",
  #:ram => 1024

  # possibly, additional provisioners:
  :provisioners => [
  #  {
  #    :type => "ansible",
  #    :provisioner => "playbook.yml"
  #  },
  #  {
  #    :type => "shell",
  #    :provisioner => "script.sh:
  #  }
  ]
}

# TODO: read from config file

# make sure the required items (box and ram) are set

if not nodeconfig[:box]
  nodeconfig[:box] = default_box
end

if not nodeconfig[:ram]
  nodeconfig[:ram] = default_ram
end

# TODO: store config


# now all the required items are set


Vagrant.configure("2") do |config|
  config.vm.box = nodeconfig[:box]

  if nodeconfig[:hostname]
    config.vm.hostname = nodeconfig[:hostname]
    config.vm.define nodeconfig[:hostname]
  end

  config.vm.provider :libvirt do |lv|
    lv.memory = nodeconfig[:ram]
  end

  if nodeconfig[:ip]
    nodeconfig.vm.network :private_network, ip: node[:ip]
  end

  # Run a no-op playbook to create the inventory file.
  # Based on that, one can run ansible without vagrant.
  config.vm.provision "no-op", type:'ansible' do |ansible|
    ansible.playbook = "no-op-playbook.yml"
  end

  # possibly more provisioners here
  nodeconfig[:provisioners].each do
  end
end
